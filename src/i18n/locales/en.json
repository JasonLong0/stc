{
  "console": {
    "info": "INFO",
    "error": "ERROR",
    "warn": "WARN",
    "success": "SUCCESS"
  },
  "util": {
    "createFileDescription": "Generated by stc v{{version}}",
    "timeout": "Request timed out."
  },
  "def": {
    "parserTypeError": "The {{type}} type could not be resolved."
  },
  "path": {
    "notName": "{{url}} [{{method}}] cannot get the method name, so it will be ignored.",
    "duplicate": "{{url}} [{{method}}] has the same method name {{name}}, you can set the `--actionIndex` option."
  },
  "app": {
    "apiJsonFileError": "API file parsing failed. Reason: {{error}}",
    "generateFileDone": "API file is generated:"
  },
  "cli": {
    "checkUpdate": "Check for updates",
    "updatePrompt": "New version found: {{version}} → {{latestVersion}}",
    "updateConfirm": ", update?",
    "updating": "updating",
    "updateDone": "The update is complete, version: v{{version}}, please run again.",
    "latestVersion": "Already the latest version.",
    "unknownOption": "Unknown option: {{arg}}.",
    "requiredUrl": "The option url must be provided.",
    "usage": "Use:",
    "option": "Options:",
    "example": "Example:",
    "option_help": "View help information.",
    "option_url": "Remote address or local file path.",
    "option_out": "The output directory, the default is {{out}} under the current execution directory of stc.",
    "option_client": "http request client. When `lang` is `ts/js`, the possible values ​​are: `axios`, `wechat`, `fetch`.",
    "option_lang": "Language, the suffix used for the output file, [default: \"ts\"].",
    "option_filter": "Filter interfaces, and the interfaces that meet the filter conditions will be generated.",
    "option_tag": "Specify tags from the interface url for filenames, the first one of tags is read by default.",
    "option_version": "View version information.",
    "option_conjunction": "Conjunction of method name. [default: \"By\"].",
    "option_actionIndex": "Method name index. [default: -1]."
  },
  "plugin": {
    "name": "Load plugin {{name}}",
    "noSetupMethod": "Plugin {{name}} has no setup method.",
    "allSetupDone": "The plugin is loaded. \n",
    "parserDef": "Parsing definition",
    "parserDefDone": "The parsing definition is complete. \n",
    "parserAction": "Parse url data",
    "parserActionDone": "Parsing url data is complete.",
    "no_200_response": "Missing information for 200 status code.",
    "no_tag": "{{url}} does not specify a tag, skip parsing. Please use the --tag parameter.",
    "template": {
      "enumRequired": "Missing enum template."
    }
  },
  "plugin_javascript": {
    "compilation_failed": "Compilation failed."
  }
}
