import './shared/api_client_base.dart';
import './shared/dio/index.dart';

<% const _multiParam = it.actionParams.length > 1 %>

<% it.actionParams.forEach(function(item) { %>
<% const _type = item.enumOption?.length ? it.camelCase(`${_defName}_${item.name}`, true) : `${it.convertType(item.type, item.typeX ?? item.ref)}` %>
<% /* 枚举定义 */ %>
<% if (item.enumOption?.length) { %>
  <% const _enumParam = it.parserEnum(_type, item.enumOption) %>
  <%= _enumParam %>
<% } %>

// 定义形参
// 多个同一类别的参数合并为新对象
// 必填参数在前，可选参数在后
<% if (_multiParam || item.properties?.length) { %>
<% if (item.properties?.length) { %>
<% } %>
<% } %>
<% }) %>

class <%= upperCase(it.action) %>Response {
  bool success = false;
  String? message;
  GetProjectStatusResponseObj? obj;

  GetProjectStatusResponse({
    required this.success,
    this.message,
    this.obj
  });

  factory GetProjectStatusResponse.fromJson(Map<String, dynamic> json) {
    return GetProjectStatusResponse(
      success: json['success'],
      message: json['message'],
      obj: json['obj'] == null ? null : GetProjectStatusResponseObj.fromJson(json['obj'])
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};

    data['success'] = success;
    data['message'] = message;
    data['obj'] = obj;

    return data;
  }
}

class GetProjectStatusResponseObj {
  String id = '';
  int status = 0;

  GetProjectStatusResponseObj({
    required this.id,
    required this.status
  });

  factory GetProjectStatusResponseObj.fromJson(Map<String, dynamic> json) {
    return GetProjectStatusResponseObj(
      id: json['id'],
      status: json['status']
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};

    data['id'] = id;
    data['status'] = status;

    return data;
  }
}

/// 
Future<<%= upperCase(it.action) %>Response> <%= it.action %>(String projectId) async {
  var _res = await request<<%= upperCase(it.action) %>Response>(
    ApiClientConfig(
      url: '<%= it.url %>',
      method: '<%= it.method %>',
      params: {
        'query': {
          'projectId': projectId
        }
      }
    ), <%= upperCase(it.action) %>Response.fromJson);

    return _res;
}
