// this file is auto generated. 
export default {"actionImport":"import Foundation\n<% if (it.hasModels) { %>\nimport Models\n<% } %>\nimport APIClient\n","actionMethod":"/// <%= it.description %>\n<% if (it.deprecated) { %>\n@available(*, deprecated, message: \"This API is deprecated\")\n<% } %>\npublic func <%= it.name %>(\n    <% it.parameters.forEach(function(param, index) { %>\n    <%= param.name %>: <%= param.type %><% if (param.optional) { %>?<% } %><% if (index < it.parameters.length - 1) { %>,<% } %>\n    <% }) %>\n) async throws -> <%= it.responseType %> {\n    <% if (it.pathParams && it.pathParams.length > 0) { %>\n    let pathParams: [String: String] = [\n        <% it.pathParams.forEach(function(param, index) { %>\n        \"<%= param.name %>\": String(<%= param.value %>)<% if (index < it.pathParams.length - 1) { %>,<% } %>\n        <% }) %>\n    ]\n    let parsedUrl = \"<%= it.url %>\".parsePathParams(pathParams)\n    <% } %>\n    \n    <% if (it.requestBody) { %>\n    let params: [String: Any] = <%= it.requestBody %>\n    <% } %>\n    \n    let config = APIClientConfig(\n        url: <% if (it.pathParams && it.pathParams.length > 0) { %>parsedUrl<% } else { %>\"<%= it.url %>\"<% } %>,\n        method: \"<%= it.method %>\"<% if (it.requestBody) { %>,\n        params: params<% } %>\n    )\n    \n    return try await APIClient.shared.request(config, type: <%= it.responseType %>.self)\n}\n","definitionBody":"/// <%= it.description %>\npublic struct <%= it.name %>: Codable {\n    <% it.properties.forEach(function(item) { %>\n    /// <%= item.description %>\n    public let <%= item.name %>: <%= item.type %><% if (item.optional) { %>?<% } %>\n    <% }) %>\n}\n","definitionFooter":"// MARK: - End of Models\n","definitionHeader":"import Foundation\n\n// MARK: - Models\n","enum":"/// <%= it.description %>\npublic enum <%= it.name %> {\n    <% it.enums.forEach(function(item) { %>\n    /// <%= item.description %>\n    case <%= item.name %><% if (item.value) { %> = \"<%= item.value %>\"<% } %>\n    <% }) %>\n}\n"}